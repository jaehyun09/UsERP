<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.UsERP.persistence.LdDAO">
	
	<!-- 재고VO resultMap -->
	<resultMap id="stockVOMap" type="com.project.UsERP.vo.StockVO">
		<id property="sto_code" column="sto_code" />
		<result property="sto_quantity" column="sto_quantity" />
		<result property="sto_reg_date" column="sto_reg_date" />
		<result property="ware_code" column="ware_code" />
		<result property="pro_code" column="pro_code" />
		<association property="warehouse" javaType="com.project.UsERP.vo.WarehouseVO">
			<id property="ware_code" column="ware_code" />
			<result property="ware_name" column="ware_name" />
			<result property="ware_location" column="ware_location" />
			<result property="ware_state" column="ware_state" />
		</association>
		<association property="product" javaType="com.project.UsERP.vo.ProductVO">
			<id property="pro_code" column="pro_code" />
			<result property="pro_name" column="pro_name" />
			<result property="pro_pur_price" column="pro_pur_price" />
			<result property="pro_sal_price" column="pro_sal_price" />
			<result property="pro_state" column="pro_state" />
			<result property="pro_reg_date" column="pro_reg_date" />
		</association>
	</resultMap>

	<!-- 양품창고 등록 -->
	<insert id="insertGoodWare" parameterType="com.project.UsERP.vo.WarehouseVO">
	INSERT INTO warehouse(ware_code, ware_name, ware_location, ware_state)
	VALUES (ware_good_seq.nextval, #{ware_name}, #{ware_location}, #{ware_state})
	</insert>
	
	<!-- 불량품창고 등록 -->
	<insert id="insertBadWare" parameterType="com.project.UsERP.vo.WarehouseVO">
	INSERT INTO warehouse(ware_code, ware_name, ware_location, ware_state)
	VALUES (ware_bad_seq.nextval, #{ware_name}, #{ware_location}, #{ware_state})
	</insert>
	
	<!-- 출고대기창고 등록 -->
	<insert id="insertWaitWare" parameterType="com.project.UsERP.vo.WarehouseVO">
	INSERT INTO warehouse(ware_code, ware_name, ware_location, ware_state)
	VALUES (ware_wait_seq.nextval, #{ware_name}, #{ware_location}, #{ware_state})
	</insert>
	
	<!-- 기초등록 - 창고 목록 -->
	<select id="warehouseList" resultType="com.project.UsERP.vo.WarehouseVO">
		SELECT * FROM warehouse ORDER BY ware_code
	</select>
	
	<!-- 기초등록 - 창고 상세 목록 -->
	<select id="warehouseDetail" resultType="com.project.UsERP.vo.WarehouseVO">
		SELECT * FROM warehouse WHERE ware_code = #{ware_code}
	</select>
	
	<!-- 기초등록 - 거래처 갯수 구하기 -->
	<select id="getCompanyCnt" resultType="int" parameterType="String">
		SELECT COUNT(*) AS selectCnt 
		FROM company 
		WHERE com_code LIKE '%'||#{compKeyword}||'%' 
		OR com_name LIKE '%'||#{compKeyword}||'%'
	</select>
	
	
	<!-- 기초등록 - 거래처 조회 -->
	<select id="CompanyList" parameterType="java.util.Map" resultType="com.project.UsERP.vo.CompanyVO">
		<![CDATA[
		SELECT *
			FROM (SELECT com_code, com_type, com_name, com_ceo_name,
						com_reg_no, com_address, com_reg_date, rownum rnum
    			FROM (SELECT * FROM company 
	    				WHERE com_code LIKE '%'||#{compKeyword}||'%' 
						OR com_name LIKE '%'||#{compKeyword}||'%'
	    				ORDER BY com_code))
    			WHERE rnum >= #{start} 
    			AND rnum <= #{end}
		]]>
	</select>
	
	
	<!-- 기초등록 - 상품 갯수 -->
	<select id="getProductCnt" resultType="int" parameterType="String">
		SELECT count(*) as cnt FROM product
		WHERE pro_code LIKE '%'||#{proKeyword}||'%' 
		OR pro_name LIKE '%'||#{proKeyword}||'%'
	</select>
	
	<!-- 기초등록 - 검색 포함 상품 조회 -->
	<select id="ProductList" resultType="com.project.UsERP.vo.ProductVO" parameterType="java.util.Map">
		<![CDATA[
			SELECT *
			FROM (SELECT pro_code, pro_name, pro_pur_price, pro_sal_price, 
						pro_state, pro_reg_date, rownum rnum
			    FROM (SELECT * FROM product 
					    WHERE pro_code LIKE '%'||#{proKeyword}||'%' 
						OR pro_name LIKE '%'||#{proKeyword}||'%'
					    ORDER BY pro_code))
			    WHERE rnum >= #{start} 
	  			AND rnum <= #{end}
		]]>
	</select>
	
	 <!-- 전표관리 - 입고 미승인 전표 -->
	<select id = "purchasingCompanySelect" resultType = "com.project.UsERP.vo.CompanyVO">
		select * from company where comp_use_state = 1
	</select>
	
	<!-- 전표관리 - 입고 승인 전표 -->
	<select id = "purchasingProductSelect" resultType = "com.project.UsERP.vo.ProductVO">
		select * from product
	</select> 
	
	<!-- 재고관리 - 재고 현황 갯수 -->
	<select id="getStockCnt" resultType="int">
		SELECT COUNT(*) as cnt
		FROM stock s,product p, warehouse w
		WHERE s.pro_code = p.pro_code
		AND s.ware_code = w.ware_code
		AND w.ware_state = 1
		AND p.pro_state = 1
		AND p.pro_name LIKE '%'||#{ssKeyword}||'%'
	</select>
	
	<!-- 재고관리 - 재고 현황 조회 -->
	<select id="StockStatusList" resultMap="stockVOMap" parameterType="java.util.Map">
		<![CDATA[
			SELECT * 
			FROM (SELECT sto_code, sto_quantity, sto_reg_date, ware_code, pro_code, ware_name, pro_name, 
        			pro_pur_price, pro_sal_price, pro_state, rownum rnum
			    FROM(SELECT s.*, w.ware_name, p.pro_name, p.pro_pur_price, 
            			p.pro_sal_price, p.pro_state
			        FROM stock s, warehouse w, product p
			        WHERE s.ware_code = w.ware_code
			        AND s.pro_code = p.pro_code
			        AND w.ware_state = 1
			        AND p.pro_state = 1
			        AND p.pro_name LIKE '%'||#{ssKeyword}||'%'
			        ORDER BY s.pro_code, s.ware_code
			        )
				)
			WHERE rnum >= #{start}
			AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 재고관리 - 상품 조회 -->
	<select id="selectProduct" resultType="com.project.UsERP.vo.ProductVO">
		SELECT * FROM product WHERE pro_state = 1
	</select>
	
	<!-- 재고관리 - 상품 조회 -->
	<select id="selectWarehouse" resultType="com.project.UsERP.vo.WarehouseVO">
		SELECT * FROM warehouse WHERE ware_state = 1
	</select>
	
	<!-- 재고관리 - 재고 이동 재고 테이블 불량품 창고 등록 -->
	<insert id="stockBadWare" parameterType="com.project.UsERP.vo.StockVO">
		INSERT INTO stock(sto_code, sto_quantity, sto_reg_date, ware_code, pro_code)
		VALUES (stock_seq.nextval, #{sto_quantity}, sysdate, #{ware_code}, #{pro_code})
	</insert>
	
	<!-- 재고관리 - 재고 이동 재고 테이블 출고 대기 창고 등록 -->
	<insert id="stockWaitWare" parameterType="com.project.UsERP.vo.StockVO">
		INSERT INTO stock(sto_code, sto_quantity, sto_reg_date, ware_code, pro_code)
		VALUES (stock_seq.nextval, #{sto_quantity}, sysdate, #{ware_code}, #{pro_code})
	</insert>
	
	<!-- 재고관리 - 재고 이동 출발창고 수량 변경 -->
	<update id="stoMinusUpdate" parameterType="java.util.Map">
		UPDATE stock SET sto_quantity = sto_quantity-#{amount}
		WHERE ware_code = #{startwh}
		AND pro_code = #{prod}
	</update>
	
	<!-- 재고관리 - 재고 이동 도착창고 수량 변경 -->
	<update id="stoPlusUpdate" parameterType="java.util.Map">
		UPDATE stock SET sto_quantity = sto_quantity+#{amount}
		WHERE ware_code = #{arrivewh}
		AND pro_code = #{prod}
	</update>
	
	
</mapper>
