<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 주의 : 네임스페이스 시큐리티를 => sec로 수정 -->
	<!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->
	<security:http pattern="/main/**" security="none" />
	
	<security:http use-expressions="true">
	<!-- 관리자 영역 설정 -->
		<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**" access="hasAuthority('ROLE_USER')"/>	

		<!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->		
		<security:intercept-url pattern="/**" access="permitAll"/>	
		
		<!-- 로그인한 사용자 영역 -->
		<security:intercept-url pattern="/client/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>	
			
		<!-- 로그인폼 -->
		<security:form-login login-page="/"
			login-processing-url="/loginPro.do"
			authentication-success-handler-ref="userLoginSuccessHandler"
			authentication-failure-handler-ref="userLoginFailureHandler"
			username-parameter="emp_code" password-parameter="emp_pwd"	/>
		
		<security:session-management>
			<!-- max-sessions="1":  같은 브라우저의 여러 창에서 동시 접속 막기 
				 expired-url="/user/login.do": 세션 만료시 이동할 주소
				 error-if-maximum-exceeded="true" : 최대 세션 초과시 에러 옵션	-->
			<security:concurrency-control max-sessions="1"
				expired-url="/"
				error-if-maximum-exceeded="true"
			/>
		</security:session-management>
		
		<!-- 접근권한이 없는 경우의 코드 -->
		<security:access-denied-handler ref="userDeniedHandler" />
		
	</security:http>
	<bean id="userLoginSuccessHandler" class="com.project.UsERP.service.UserLoginSuccessHandler" >
	<constructor-arg name = "sqlSession" ref = "sqlSession" />
	</bean>
	<bean id="userLoginFailureHandler" class="com.project.UsERP.service.UserLoginFailureHandler" >
	<constructor-arg name = "sqlSession" ref = "sqlSession" />
		<constructor-arg name = "passwordEncoder" ref = "bcryptPasswordEncoder" />
	</bean>		
	<bean id="userDeniedHandler" class="com.project.UsERP.service.UserDeniedHandler"/>	
	
	<!-- 로그인 인증 처리 하는 빈 -->
	<!-- 주의 : 에러 => UserAuthenticationService에서 sqlSession 추가 안한 경우  -->
	<bean id="userService" class="com.project.UsERP.service.UserAuthenticationService">
		<constructor-arg name="sqlSession" ref="sqlSession"/>
	</bean>
	
	<!-- 비밀번호 암호화 빈 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	

</beans>
